/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef POLICY_POLICY_H
#define POLICY_POLICY_H

#include <thrift/c_glib/processor/thrift_dispatch_processor.h>

#include "policy_policy_types.h"

/* Policy service interface */
typedef struct _policyPolicyIf policyPolicyIf;  /* dummy object */

struct _policyPolicyIfInterface
{
  GTypeInterface parent;

  gboolean (*parse_attributes) (policyPolicyIf *iface, GPtrArray ** _return, const gchar * attribute, GError **error);
  gboolean (*parse_policy) (policyPolicyIf *iface, gchar ** _return, const gchar * policy, GError **error);
};
typedef struct _policyPolicyIfInterface policyPolicyIfInterface;

GType policy_policy_if_get_type (void);
#define POLICY_TYPE_POLICY_IF (policy_policy_if_get_type())
#define POLICY_POLICY_IF(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), POLICY_TYPE_POLICY_IF, policyPolicyIf))
#define POLICY_IS_POLICY_IF(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), POLICY_TYPE_POLICY_IF))
#define POLICY_POLICY_IF_GET_INTERFACE(inst) (G_TYPE_INSTANCE_GET_INTERFACE ((inst), POLICY_TYPE_POLICY_IF, policyPolicyIfInterface))

gboolean policy_policy_if_parse_attributes (policyPolicyIf *iface, GPtrArray ** _return, const gchar * attribute, GError **error);
gboolean policy_policy_if_parse_policy (policyPolicyIf *iface, gchar ** _return, const gchar * policy, GError **error);

/* Policy service client */
struct _policyPolicyClient
{
  GObject parent;

  ThriftProtocol *input_protocol;
  ThriftProtocol *output_protocol;
};
typedef struct _policyPolicyClient policyPolicyClient;

struct _policyPolicyClientClass
{
  GObjectClass parent;
};
typedef struct _policyPolicyClientClass policyPolicyClientClass;

GType policy_policy_client_get_type (void);
#define POLICY_TYPE_POLICY_CLIENT (policy_policy_client_get_type())
#define POLICY_POLICY_CLIENT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), POLICY_TYPE_POLICY_CLIENT, policyPolicyClient))
#define POLICY_POLICY_CLIENT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), POLICY_TYPE_POLICY_CLIENT, policyPolicyClientClass))
#define POLICY_POLICY_IS_CLIENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), POLICY_TYPE_POLICY_CLIENT))
#define POLICY_POLICY_IS_CLIENT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), POLICY_TYPE_POLICY_CLIENT))
#define POLICY_POLICY_CLIENT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), POLICY_TYPE_POLICY_CLIENT, policyPolicyClientClass))

gboolean policy_policy_client_parse_attributes (policyPolicyIf * iface, GPtrArray ** _return, const gchar * attribute, GError ** error);
gboolean policy_policy_client_send_parse_attributes (policyPolicyIf * iface, const gchar * attribute, GError ** error);
gboolean policy_policy_client_recv_parse_attributes (policyPolicyIf * iface, GPtrArray ** _return, GError ** error);
gboolean policy_policy_client_parse_policy (policyPolicyIf * iface, gchar ** _return, const gchar * policy, GError ** error);
gboolean policy_policy_client_send_parse_policy (policyPolicyIf * iface, const gchar * policy, GError ** error);
gboolean policy_policy_client_recv_parse_policy (policyPolicyIf * iface, gchar ** _return, GError ** error);
void policy_client_set_property (GObject *object, guint property_id, const GValue *value, GParamSpec *pspec);
void policy_client_get_property (GObject *object, guint property_id, GValue *value, GParamSpec *pspec);

/* Policy handler (abstract base class) */
struct _policyPolicyHandler
{
  GObject parent;
};
typedef struct _policyPolicyHandler policyPolicyHandler;

struct _policyPolicyHandlerClass
{
  GObjectClass parent;

  gboolean (*parse_attributes) (policyPolicyIf *iface, GPtrArray ** _return, const gchar * attribute, GError **error);
  gboolean (*parse_policy) (policyPolicyIf *iface, gchar ** _return, const gchar * policy, GError **error);
};
typedef struct _policyPolicyHandlerClass policyPolicyHandlerClass;

GType policy_policy_handler_get_type (void);
#define POLICY_TYPE_POLICY_HANDLER (policy_policy_handler_get_type())
#define POLICY_POLICY_HANDLER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), POLICY_TYPE_POLICY_HANDLER, policyPolicyHandler))
#define POLICY_IS_POLICY_HANDLER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), POLICY_TYPE_POLICY_HANDLER))
#define POLICY_POLICY_HANDLER_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), POLICY_TYPE_POLICY_HANDLER, policyPolicyHandlerClass))
#define POLICY_IS_POLICY_HANDLER_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), POLICY_TYPE_POLICY_HANDLER))
#define POLICY_POLICY_HANDLER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), POLICY_TYPE_POLICY_HANDLER, policyPolicyHandlerClass))

gboolean policy_policy_handler_parse_attributes (policyPolicyIf *iface, GPtrArray ** _return, const gchar * attribute, GError **error);
gboolean policy_policy_handler_parse_policy (policyPolicyIf *iface, gchar ** _return, const gchar * policy, GError **error);

/* Policy processor */
struct _policyPolicyProcessor
{
  ThriftDispatchProcessor parent;

  /* protected */
  policyPolicyHandler *handler;
  GHashTable *process_map;
};
typedef struct _policyPolicyProcessor policyPolicyProcessor;

struct _policyPolicyProcessorClass
{
  ThriftDispatchProcessorClass parent;

  /* protected */
  gboolean (*dispatch_call) (ThriftDispatchProcessor *processor,
                             ThriftProtocol *in,
                             ThriftProtocol *out,
                             gchar *fname,
                             gint32 seqid,
                             GError **error);
};
typedef struct _policyPolicyProcessorClass policyPolicyProcessorClass;

GType policy_policy_processor_get_type (void);
#define POLICY_TYPE_POLICY_PROCESSOR (policy_policy_processor_get_type())
#define POLICY_POLICY_PROCESSOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), POLICY_TYPE_POLICY_PROCESSOR, policyPolicyProcessor))
#define POLICY_IS_POLICY_PROCESSOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), POLICY_TYPE_POLICY_PROCESSOR))
#define POLICY_POLICY_PROCESSOR_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), POLICY_TYPE_POLICY_PROCESSOR, policyPolicyProcessorClass))
#define POLICY_IS_POLICY_PROCESSOR_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), POLICY_TYPE_POLICY_PROCESSOR))
#define POLICY_POLICY_PROCESSOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), POLICY_TYPE_POLICY_PROCESSOR, policyPolicyProcessorClass))

#endif /* POLICY_POLICY_H */
