/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef USER_USER_TYPES_H
#define USER_USER_TYPES_H

/* base includes */
#include <glib-object.h>
#include <thrift/c_glib/thrift_struct.h>
#include <thrift/c_glib/protocol/thrift_protocol.h>
/* other thrift includes */
#include "aa_aa_types.h"
#include "ca_ca_types.h"

/* custom thrift includes */

/* begin types */

/* struct UserPrvKey */
struct _userUserPrvKey
{ 
  ThriftStruct parent; 

  /* public */
  GPtrArray * aids;
  gboolean __isset_aids;
  GByteArray * gpk;
  gboolean __isset_gpk;
  GByteArray * gsk;
  gboolean __isset_gsk;
  GByteArray * cert;
  gboolean __isset_cert;
  GHashTable * sks;
  gboolean __isset_sks;
  caURevoKey * cask;
  gboolean __isset_cask;
  GPtrArray * attributes;
  gboolean __isset_attributes;
};
typedef struct _userUserPrvKey userUserPrvKey;

struct _userUserPrvKeyClass
{
  ThriftStructClass parent;
};
typedef struct _userUserPrvKeyClass userUserPrvKeyClass;

GType user_user_prv_key_get_type (void);
#define USER_TYPE_USER_PRV_KEY (user_user_prv_key_get_type())
#define USER_USER_PRV_KEY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), USER_TYPE_USER_PRV_KEY, userUserPrvKey))
#define USER_USER_PRV_KEY_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), USER__TYPE_USER_PRV_KEY, userUserPrvKeyClass))
#define USER_IS_USER_PRV_KEY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), USER_TYPE_USER_PRV_KEY))
#define USER_IS_USER_PRV_KEY_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), USER_TYPE_USER_PRV_KEY))
#define USER_USER_PRV_KEY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), USER_TYPE_USER_PRV_KEY, userUserPrvKeyClass))

/* struct AuthPK */
struct _userAuthPK
{ 
  ThriftStruct parent; 

  /* public */
  gchar * aid;
  gboolean __isset_aid;
  GByteArray * pk;
  gboolean __isset_pk;
  GHashTable * attr_pks;
  gboolean __isset_attr_pks;
  GPtrArray * attributes;
  gboolean __isset_attributes;
};
typedef struct _userAuthPK userAuthPK;

struct _userAuthPKClass
{
  ThriftStructClass parent;
};
typedef struct _userAuthPKClass userAuthPKClass;

GType user_auth_p_k_get_type (void);
#define USER_TYPE_AUTH_P_K (user_auth_p_k_get_type())
#define USER_AUTH_P_K(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), USER_TYPE_AUTH_P_K, userAuthPK))
#define USER_AUTH_P_K_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), USER__TYPE_AUTH_P_K, userAuthPKClass))
#define USER_IS_AUTH_P_K(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), USER_TYPE_AUTH_P_K))
#define USER_IS_AUTH_P_K_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), USER_TYPE_AUTH_P_K))
#define USER_AUTH_P_K_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), USER_TYPE_AUTH_P_K, userAuthPKClass))

/* constants */

/* struct UserEncryptArgs */
struct _userUserEncryptArgs
{ 
  ThriftStruct parent; 

  /* public */
  GByteArray * pub;
  gboolean __isset_pub;
  GPtrArray * attr_pks;
  gboolean __isset_attr_pks;
  gchar * policy;
  gboolean __isset_policy;
  GArray * revo_list;
  gboolean __isset_revo_list;
  gint32 uindex;
  gboolean __isset_uindex;
  GByteArray * mes;
  gboolean __isset_mes;
};
typedef struct _userUserEncryptArgs userUserEncryptArgs;

struct _userUserEncryptArgsClass
{
  ThriftStructClass parent;
};
typedef struct _userUserEncryptArgsClass userUserEncryptArgsClass;

GType user_user_encrypt_args_get_type (void);
#define USER_TYPE_USER_ENCRYPT_ARGS (user_user_encrypt_args_get_type())
#define USER_USER_ENCRYPT_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), USER_TYPE_USER_ENCRYPT_ARGS, userUserEncryptArgs))
#define USER_USER_ENCRYPT_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), USER__TYPE_USER_ENCRYPT_ARGS, userUserEncryptArgsClass))
#define USER_IS_USER_ENCRYPT_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), USER_TYPE_USER_ENCRYPT_ARGS))
#define USER_IS_USER_ENCRYPT_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), USER_TYPE_USER_ENCRYPT_ARGS))
#define USER_USER_ENCRYPT_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), USER_TYPE_USER_ENCRYPT_ARGS, userUserEncryptArgsClass))

/* struct UserEncryptResult */
struct _userUserEncryptResult
{ 
  ThriftStruct parent; 

  /* public */
  GByteArray * success;
  gboolean __isset_success;
};
typedef struct _userUserEncryptResult userUserEncryptResult;

struct _userUserEncryptResultClass
{
  ThriftStructClass parent;
};
typedef struct _userUserEncryptResultClass userUserEncryptResultClass;

GType user_user_encrypt_result_get_type (void);
#define USER_TYPE_USER_ENCRYPT_RESULT (user_user_encrypt_result_get_type())
#define USER_USER_ENCRYPT_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), USER_TYPE_USER_ENCRYPT_RESULT, userUserEncryptResult))
#define USER_USER_ENCRYPT_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), USER__TYPE_USER_ENCRYPT_RESULT, userUserEncryptResultClass))
#define USER_IS_USER_ENCRYPT_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), USER_TYPE_USER_ENCRYPT_RESULT))
#define USER_IS_USER_ENCRYPT_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), USER_TYPE_USER_ENCRYPT_RESULT))
#define USER_USER_ENCRYPT_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), USER_TYPE_USER_ENCRYPT_RESULT, userUserEncryptResultClass))

/* struct UserDecryptArgs */
struct _userUserDecryptArgs
{ 
  ThriftStruct parent; 

  /* public */
  GByteArray * cph;
  gboolean __isset_cph;
  GByteArray * pub;
  gboolean __isset_pub;
  userUserPrvKey * prv;
  gboolean __isset_prv;
};
typedef struct _userUserDecryptArgs userUserDecryptArgs;

struct _userUserDecryptArgsClass
{
  ThriftStructClass parent;
};
typedef struct _userUserDecryptArgsClass userUserDecryptArgsClass;

GType user_user_decrypt_args_get_type (void);
#define USER_TYPE_USER_DECRYPT_ARGS (user_user_decrypt_args_get_type())
#define USER_USER_DECRYPT_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), USER_TYPE_USER_DECRYPT_ARGS, userUserDecryptArgs))
#define USER_USER_DECRYPT_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), USER__TYPE_USER_DECRYPT_ARGS, userUserDecryptArgsClass))
#define USER_IS_USER_DECRYPT_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), USER_TYPE_USER_DECRYPT_ARGS))
#define USER_IS_USER_DECRYPT_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), USER_TYPE_USER_DECRYPT_ARGS))
#define USER_USER_DECRYPT_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), USER_TYPE_USER_DECRYPT_ARGS, userUserDecryptArgsClass))

/* struct UserDecryptResult */
struct _userUserDecryptResult
{ 
  ThriftStruct parent; 

  /* public */
  GByteArray * success;
  gboolean __isset_success;
};
typedef struct _userUserDecryptResult userUserDecryptResult;

struct _userUserDecryptResultClass
{
  ThriftStructClass parent;
};
typedef struct _userUserDecryptResultClass userUserDecryptResultClass;

GType user_user_decrypt_result_get_type (void);
#define USER_TYPE_USER_DECRYPT_RESULT (user_user_decrypt_result_get_type())
#define USER_USER_DECRYPT_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), USER_TYPE_USER_DECRYPT_RESULT, userUserDecryptResult))
#define USER_USER_DECRYPT_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), USER__TYPE_USER_DECRYPT_RESULT, userUserDecryptResultClass))
#define USER_IS_USER_DECRYPT_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), USER_TYPE_USER_DECRYPT_RESULT))
#define USER_IS_USER_DECRYPT_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), USER_TYPE_USER_DECRYPT_RESULT))
#define USER_USER_DECRYPT_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), USER_TYPE_USER_DECRYPT_RESULT, userUserDecryptResultClass))

#endif /* USER_USER_TYPES_H */
